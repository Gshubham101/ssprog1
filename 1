%{
int a[]={0,0,0,0},i,valid=1,opnd=0;
%}
%x OPER
%%
[^a-z ^A-Z ^0-9]+ ext();
[a-z A-Z 0-9]+ {BEGIN OPER;opnd++;}
&lt;OPER&gt;&quot;+&quot; {if(valid) {valid=0;i=0;} else ext();}
&lt;OPER&gt;&quot;-&quot; {if(valid) {valid=0;i=1;} else ext();}
&lt;OPER&gt;&quot;*&quot; {if(valid) {valid=0;i=2;} else ext();}
&lt;OPER&gt;&quot;/&quot; {if(valid) {valid=0;i=3;} else ext();}
&lt;OPER&gt;[a-z A-Z 0-9]+ {opnd++;if(valid==0) {valid=1;a[i]++;}else ext();}
&lt;OPER&gt;&quot;\n&quot; {if(valid==0) ext();else return 0;}
.\n ext();
%%
int main()
{
printf(&quot;enter expr\n&quot;);
yylex();
printf(&quot;valid\n&quot;);
printf(&quot;operands=%d\n&quot;,opnd);
printf(&quot;+=%d\n&quot;,a[0]);
printf(&quot;-=%d\n&quot;,a[1]);
printf(&quot;*=%d\n&quot;,a[2]);
printf(&quot;/=%d\n&quot;,a[3]);
}
int ext()
{
printf(&quot;invalid\n&quot;);
exit(0);
}

To run the Program,
gedit filename.l
lex filename.l
cc lex.yy.c -ll
./a.out




*******


%{
#include &quot;y.tab.h&quot;
extern int yylval;
%}
%%
[0-9]+ {yylval=atoi(yytext); return
NUM;}
[\t] ;
. {return yytext[0];}
\n {return 0;}
%%

%{
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
%}
%token NUM
%left &#39;+&#39; &#39;-&#39;
%left &#39;*&#39; &#39;/&#39;
%%
S:e {printf(&quot;result=%d\n&quot;,$$); return 0;}
;
e:e&#39;+&#39;e {$$=$1+$3;}
|e&#39;-&#39;e {$$=$1-$3;}
|e&#39;*&#39;e {$$=$1*$3;}
|e&#39;/&#39;e {$$=$1/$3;}
|&#39;(&#39;e&#39;)&#39; {$$=$2;}
|NUM {$$=$1;}
;
%%
main()
{
printf(&quot;enter expr\n&quot;);
yyparse();
}
yyerror()
{
printf(&quot;error\n&quot;);
exit(0);
}
